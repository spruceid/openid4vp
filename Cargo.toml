[package]
name = "openid4vp"
version = "0.1.0"
edition = "2021"
authors = ["Spruce Systems, Inc."]
license = "MIT OR Apache-2.0"
description = "OpenID Connect for Verifiable Presentations"
repository = "https://github.com/spruceid/openid4vp/"
documentation = "https://docs.rs/openid4vp/"

[features]
default = []

[dependencies]
anyhow = "1.0.75"
async-trait = "0.1.73"
base64 = "0.21.4"
http = "1.1.0"
# NOTE: ssi rexports syntax_json, but does not use the `serde_json` feature for serialization/deserialization.
# This is currently used in the jwt_vp test to go from a `VeriableCredential` to an `AnyJsonCredential` type.
# There may be a better way to handle this that doesn't require the `json-syntax` crate directly.
json-syntax = { version = "0.12.5", features = ["serde_json"] }
# jsonpath_lib = "0.3.0"
serde_json_path = "0.7.1"
jsonschema = "0.18.0"
openid4vp-frontend = { version = "0.1.0", path = "openid4vp-frontend" }
p256 = { version = "0.13.2", features = ["jwk"] }
rand = { version = "0.8.5" }
reqwest = { version = "0.12.5", features = ["rustls-tls"] }
serde = "1.0.188"
serde_json = "1.0.107"
serde_urlencoded = "0.7.1"
ssi = { version = "0.10.1", features = ["secp256r1"] }
tokio = "1.32.0"
tracing = "0.1.37"
url = { version = "2.4.1", features = ["serde"] }
x509-cert = "0.2.4"
thiserror = "1.0.65"

[dev-dependencies]
serde_json = { version = "1.0", features = ["preserve_order"] }
serde_path_to_error = "0.1.8"
tokio = { version = "1.32.0", features = ["macros"] }
did-method-key = "0.3"

[target.'cfg(target_arch = "wasm32")'.dependencies]
uuid = { version = "1.2", features = ["v4", "serde", "js"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
uuid = { version = "1.2", features = ["v4", "serde"] }
